{"version":3,"sources":["components/CountryPicker.jsx","components/Chart.jsx","images/image.png","components/Cards.jsx","axios.js","App.js","index.js"],"names":["CountryPicker","fetchcountries","country","countrychange","FormControl","className","NativeSelect","value","onChange","map","Country","i","Chart","dailydata","cases","todayCases","deaths","todayDeaths","doughnutchart","data","labels","datasets","backgroundColor","barchart","options","plugins","legend","display","title","text","Cards","coronainfo","updated","Grid","container","spacing","justify","item","component","Card","xs","sm","md","CardContent","Typography","variant","color","gutterBottom","start","end","duration","separator","Date","toDateString","axiosInstance","axios","create","baseURL","App","useState","loading","setloading","setcoronainfo","setdailydata","setfetchcountries","setcountry","useEffect","a","get","res","covidinfo","console","log","fetchData","getcountry","countrySlug","src","image","alt","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ea4bb99.chunk.js","sourcesContent":["import React from 'react'\r\nimport './countrypicker.css';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\n\r\n\r\nconst CountryPicker = ({fetchcountries , country , countrychange}) => {\r\n\r\n\r\n    return (\r\n        <FormControl className=\"formcontrol\">\r\n            <NativeSelect value={country} onChange={countrychange}>\r\n                <option value=\"\">Global</option>\r\n                {fetchcountries.map((Country, i) => <option key={i} value={Country.country}>{Country.country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React from 'react'\r\nimport { Doughnut, Bar } from 'react-chartjs-2';\r\nimport './chart.css';\r\n\r\nconst Chart = ({ dailydata, country }) => {\r\n    const {\r\n        cases,\r\n        todayCases,\r\n        deaths,\r\n        todayDeaths,\r\n    } = dailydata;\r\n\r\n\r\n    const doughnutchart = (\r\n        <div className=\"doughnut\">\r\n            {cases ? (\r\n                <Doughnut\r\n                    data={{\r\n                        labels: ['TotalInfected', 'NewInfected', 'TotalDeaths', 'NewDeaths'],\r\n                        datasets: [{\r\n                            data: [cases, todayCases, deaths, todayDeaths],\r\n                            backgroundColor: [\r\n                                'red',\r\n                                'green',\r\n                                'black',\r\n                                'blue',\r\n\r\n                            ],\r\n                        }]\r\n                    }}\r\n                    \r\n                />) : ''\r\n            }\r\n        </div>\r\n    );\r\n\r\n    const barchart = (\r\n        <div className=\"bar\">\r\n            {cases ? (\r\n                <Bar\r\n                    data={{\r\n                        labels: ['Total Infected', 'New Infected', 'Total Deaths', 'New Deaths'],\r\n                        datasets: [{\r\n                            backgroundColor: [\r\n                                'blue',\r\n                                'green',\r\n                                'red',\r\n                                'rgba(37, 3, 3, 0.5)',\r\n                            ],\r\n                            data: [cases, todayCases, deaths, todayDeaths],\r\n                        }],\r\n                    }}\r\n                    options={{\r\n                        plugins:{\r\n                        legend: { display: false },\r\n                        title: { display: true, text: `current state in ${country}` },\r\n                        }\r\n                    }}\r\n                        />) : ''\r\n            }\r\n        </div>\r\n    );\r\n    return (\r\n        <div>\r\n            {country ? barchart : doughnutchart}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\nimport './style.css';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\nconst Cards = ({coronainfo}) => {\r\n\r\n    const {\r\n        updated,\r\n        cases,\r\n        todayCases,\r\n        deaths,\r\n        todayDeaths,\r\n      } = coronainfo;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <Grid container spacing={3} justify=\"center\">\r\n            <Grid item component={Card} xs={10} sm={4} md={2} className=\"Totalinfected card\" >\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" color=\"error\" gutterBottom>Total Infected</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={cases} duration={3} separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography color=\"textSecondary\" >{new Date(updated).toDateString()}</Typography>\r\n                    <br />\r\n                    <Typography variant=\"body2\">Number of total cases of Covid-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={10} sm={4} md={2} className=\"Newinfected card\">\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" color=\"primary\" gutterBottom>New Infected</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={todayCases} duration={3} separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography color=\"textSecondary\" >{new Date(updated).toDateString()}</Typography>\r\n                    <br />\r\n                    <Typography variant=\"body2\">Number of new cases of Covid-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={10} sm={4} md={2} className=\"Totaldeaths card\">\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" color=\"secondary\" gutterBottom>Total Deaths</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={deaths} duration={3} separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography color=\"textSecondary\" >{new Date(updated).toDateString()}</Typography>\r\n                    <br />\r\n                    <Typography variant=\"body2\">Number of total deaths of Covid-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={10} sm={4} md={2} className=\"Newdeaths card\">\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" color=\"primary\" gutterBottom>New Deaths</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={todayDeaths} duration={3} separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography color=\"textSecondary\" >{new Date(updated).toDateString()}</Typography>\r\n                    <br />\r\n                    <Typography variant=\"body2\">Number of new deaths of Covid-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n        </Grid>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: `https://disease.sh/v3/covid-19`\r\n});\r\n\r\nexport default axiosInstance;","import React, { useState, useEffect } from 'react'\nimport CountryPicker from './components/CountryPicker';\nimport './App.css';\nimport Chart from './components/Chart';\nimport image from './images/image.png';\nimport Cards from './components/Cards';\nimport axios from './axios';\n\nconst App = () => {\n\n  const [loading, setloading] = useState(false)\n  const [coronainfo, setcoronainfo] = useState({})\n  const [dailydata, setdailydata] = useState({})\n  const [fetchcountries, setfetchcountries] = useState([])\n  const [country, setcountry] = useState(\"\")\n\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setloading(true);\n        const res = await axios.get(`/all`);\n        setloading(false);\n\n        const { updated, cases, todayCases, deaths, todayDeaths } = res.data;\n\n        const covidinfo = {\n          updated,\n          cases,\n          todayCases,\n          deaths,\n          todayDeaths,\n        };\n        setcoronainfo(covidinfo);\n        setdailydata(covidinfo);\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await axios.get(`/countries`);\n        setfetchcountries(res.data);\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [])\n\n      \n\n  const countrychange = (event) =>{\n      setcountry(event.target.value)\n      getcountry(event.target.value)\n  }\n\n  const getcountry = async (countrySlug) =>{\n      if (countrySlug) {\n        try {\n          const res = await axios.get(`/countries/${countrySlug}`);\n          const { todayCases, cases, todayDeaths, deaths, updated } = res.data;\n  \n          const covidinfo = {\n            todayCases,\n            cases,\n            todayDeaths,\n            deaths,\n            updated,\n          };\n          setcoronainfo(covidinfo);\n          setdailydata(covidinfo);\n  \n          \n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        async function fetchData() {\n          try {\n            const res = await axios.get(`/all`);\n    \n            const { updated, cases, todayCases, deaths, todayDeaths } = res.data;\n    \n            const covidinfo = {\n              updated,\n              cases,\n              todayCases,\n              deaths,\n              todayDeaths,\n            };\n            setcoronainfo(covidinfo);\n            setdailydata(covidinfo);\n    \n          } catch (error) {\n            console.log(error);\n          }\n        }\n        fetchData();\n      }\n\n  }\n\n  if (loading) {\n    return <p className=\"load\">fething data from api...!\n      Please wait OR Check your Internet Connection.</p>\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"img1\">\n        <img src={image} alt=\"covid-19\" className=\"img\" />\n      </div>\n      <Cards coronainfo={coronainfo} />\n      <CountryPicker fetchcountries={fetchcountries} country={country} countrychange={countrychange}/>\n      <Chart dailydata={dailydata} country={country}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}